/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package weather.station;

/**
 *
 * @author Jason Anderson
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TimeFrame = new javax.swing.ButtonGroup();
        MeanTemperature = new javax.swing.JCheckBox();
        HighLowTemperature = new javax.swing.JCheckBox();
        MeanWindSpeed = new javax.swing.JCheckBox();
        MaximumWindSpeed = new javax.swing.JCheckBox();
        PrevailingWindDirection = new javax.swing.JCheckBox();
        Rainfall = new javax.swing.JCheckBox();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        Daily = new javax.swing.JRadioButton();
        Weekly = new javax.swing.JRadioButton();
        Monthly = new javax.swing.JRadioButton();
        Yearly = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MeanTemperature.setText("Mean Temperature");
        MeanTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeanTemperatureActionPerformed(evt);
            }
        });

        HighLowTemperature.setText("High/Low Temperature");
        HighLowTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HighLowTemperatureActionPerformed(evt);
            }
        });

        MeanWindSpeed.setText("Mean Wind Speed");
        MeanWindSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeanWindSpeedActionPerformed(evt);
            }
        });

        MaximumWindSpeed.setText("Maximum Wind Speed");
        MaximumWindSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaximumWindSpeedActionPerformed(evt);
            }
        });

        PrevailingWindDirection.setText("Prevailing Wind Direction");
        PrevailingWindDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevailingWindDirectionActionPerformed(evt);
            }
        });

        Rainfall.setText("Rainfall");
        Rainfall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RainfallActionPerformed(evt);
            }
        });

        TimeFrame.add(Daily);
        Daily.setText("Daily");
        Daily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DailyActionPerformed(evt);
            }
        });

        TimeFrame.add(Weekly);
        Weekly.setText("Weekly");
        Weekly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeeklyActionPerformed(evt);
            }
        });

        TimeFrame.add(Monthly);
        Monthly.setText("Monthly");
        Monthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyActionPerformed(evt);
            }
        });

        TimeFrame.add(Yearly);
        Yearly.setText("Yearly");
        Yearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearlyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Daily)
                    .addComponent(Weekly)
                    .addComponent(Monthly)
                    .addComponent(Yearly))
                .addGap(0, 67, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(Daily)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Weekly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Monthly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Yearly))
        );
        jLayeredPane1.setLayer(Daily, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Weekly, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Monthly, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Yearly, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Rainfall)
                    .addComponent(PrevailingWindDirection)
                    .addComponent(MaximumWindSpeed)
                    .addComponent(MeanWindSpeed)
                    .addComponent(HighLowTemperature)
                    .addComponent(MeanTemperature)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MeanTemperature)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HighLowTemperature)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MeanWindSpeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MaximumWindSpeed))
                    .addComponent(jLayeredPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PrevailingWindDirection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Rainfall)
                .addGap(0, 132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HighLowTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HighLowTemperatureActionPerformed
        System.out.println("High/Low Temperature chosen.");
    }//GEN-LAST:event_HighLowTemperatureActionPerformed

    private void MeanTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeanTemperatureActionPerformed
        System.out.println("Mean Temperature chosen.");
    }//GEN-LAST:event_MeanTemperatureActionPerformed

    private void MeanWindSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeanWindSpeedActionPerformed
        System.out.println("Mean Wind Speed chosen.");
    }//GEN-LAST:event_MeanWindSpeedActionPerformed

    private void MaximumWindSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaximumWindSpeedActionPerformed
        System.out.println("Maximum Wind Speed chosen.");
    }//GEN-LAST:event_MaximumWindSpeedActionPerformed

    private void PrevailingWindDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrevailingWindDirectionActionPerformed
        System.out.println("Prevailing Wind Direction chosen.");
    }//GEN-LAST:event_PrevailingWindDirectionActionPerformed

    private void RainfallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RainfallActionPerformed
        System.out.println("Rainfall chosen.");
    }//GEN-LAST:event_RainfallActionPerformed

    private void DailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DailyActionPerformed
        System.out.println("Daily chosen.");
    }//GEN-LAST:event_DailyActionPerformed

    private void WeeklyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeeklyActionPerformed
        System.out.println("Weekly chosen.");
    }//GEN-LAST:event_WeeklyActionPerformed

    private void MonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyActionPerformed
        System.out.println("Monthly chosen.");
    }//GEN-LAST:event_MonthlyActionPerformed

    private void YearlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearlyActionPerformed
        System.out.println("Yearly chosen.");
    }//GEN-LAST:event_YearlyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Daily;
    private javax.swing.JCheckBox HighLowTemperature;
    private javax.swing.JCheckBox MaximumWindSpeed;
    private javax.swing.JCheckBox MeanTemperature;
    private javax.swing.JCheckBox MeanWindSpeed;
    private javax.swing.JRadioButton Monthly;
    private javax.swing.JCheckBox PrevailingWindDirection;
    private javax.swing.JCheckBox Rainfall;
    private javax.swing.ButtonGroup TimeFrame;
    private javax.swing.JRadioButton Weekly;
    private javax.swing.JRadioButton Yearly;
    private javax.swing.JLayeredPane jLayeredPane1;
    // End of variables declaration//GEN-END:variables
}
